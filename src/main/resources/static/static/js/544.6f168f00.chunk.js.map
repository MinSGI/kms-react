{"version":3,"file":"static/js/544.6f168f00.chunk.js","mappings":"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","sources":["pages/news/component/NaverNewsAPI.js","pages/news/component/NaverNews.js","utils/AxiosCustom.js","pages/news/component/NewsAPI.js","pages/news/component/Blog.js","pages/news/component/News.js","pages/news/News.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst NaverNewsAPI = async (query, sort, display) => {\r\n    try {\r\n        const url = `/v1/search/news.json?query=${query}&sort=${sort}&display=${display}`;\r\n        const apiKey = 'PwA3g7rg7brtYe29mPQr';\r\n        const secretApiKey = 'MkU0LOXXvm';\r\n        const header = {\r\n            'X-Naver-Client-Id': apiKey,\r\n            'X-Naver-Client-Secret': secretApiKey,\r\n        }\r\n        const response = await axios.get(url, {headers:header});\r\n\r\n        return response.data.items;\r\n    } catch (error) {\r\n        console.error('Error fetching news:', error);\r\n        return [];\r\n    }\r\n};\r\n\r\nexport default NaverNewsAPI;\r\n","import React, {useEffect, useState} from 'react';\r\nimport NaverNewsAPI from './NaverNewsAPI'\r\nimport {Button, Card, CardText, CardTitle, Col, Row} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport DOMPurify from 'dompurify';\r\n\r\nconst NaverNews = () => {\r\n    const [itemsPerPage, setItemsPerPage] = useState(4); // 페이지당 아이템 수\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const [keyword, setKeyword] = useState('a');\r\n    const [sort, setSort] = useState('sim');\r\n    const [newsList, setNewsList] = useState('');\r\n    const [display, setDisplay] = useState('10');\r\n    const searchHandle = async () => {\r\n        const getNewsList = await NaverNewsAPI(keyword, sort, display);\r\n        setNewsList(getNewsList);\r\n    };\r\n\r\n    useEffect(() => {\r\n        searchHandle();\r\n    }, [sort, display, itemsPerPage]);\r\n\r\n    const keyDownHandler = (event) => {\r\n        if (event.key === 'Enter') {\r\n            searchHandle();\r\n        }\r\n    }\r\n\r\n    const handlePageClick = (selectedPage) => {\r\n        setCurrentPage(selectedPage.selected);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('paging click');\r\n    }, [currentPage]);\r\n\r\n    const slicedNewsList = newsList ? newsList.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage) : null;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>네이버 뉴스</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"검색어 입력\"\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                onKeyDown={keyDownHandler}\r\n            />\r\n            <button onClick={searchHandle}>검색</button>\r\n            <label>\r\n                정렬:\r\n                <select value={sort} onChange={(e) => setSort(e.target.value)}>\r\n                    <option value=\"date\">날짜순</option>\r\n                    <option value=\"sim\">관련도순</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                리턴 결과 수:\r\n                <select value={display} onChange={(e) => setDisplay(e.target.value)}>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"30\">30</option>\r\n                    <option value=\"40\">40</option>\r\n                    <option value=\"50\">50</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                페이지 수:\r\n                <select value={itemsPerPage} onChange={(e) => setItemsPerPage((e.target.value) * 1)}>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"15\">15</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"30\">30</option>\r\n                </select>\r\n            </label>\r\n            <Row>\r\n                <h5 className=\"mb-3 mt-3\">네이버 뉴스</h5>\r\n                {slicedNewsList && slicedNewsList.map((item, idx) => (\r\n                    <Col md=\"6\" lg=\"4\" key={idx}>\r\n                        <Card body className=\"text-center\">\r\n                            <CardTitle tag=\"h5\"\r\n                                       dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(item.title)}}></CardTitle>\r\n                            <CardText\r\n                                dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(item.description)}}></CardText>\r\n                            <div>\r\n                                <Link to={item.link}><Button color=\"light-danger\">Go somewhere</Button></Link>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <ReactPaginate\r\n                previousLabel={'<'}\r\n                nextLabel={'>'}\r\n                breakLabel={'...'}\r\n                pageCount={Math.ceil(newsList.length / itemsPerPage)}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={10}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={'pagination'}\r\n                subContainerClassName={'pages pagination'}\r\n                activeClassName={'active'}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NaverNews;\r\n","import axios from 'axios';\r\n\r\n// Axios 인스턴스 생성\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://api.example.com/', // 기본 URL 설정\r\n    timeout: 5000, // 요청 시간 초과 설정 (옵션)\r\n});\r\n\r\n// 요청 전에 실행되는 함수\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        // 요청 전에 설정할 내용 추가 가능\r\n        console.log('Request sent:', config);\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 응답 후에 실행되는 함수\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        // 응답 후에 실행할 내용 추가 가능\r\n        console.log('Response received:', response);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst AxiosCustom = (url, method = 'get', data = null, config = {}) => {\r\n\r\n    // GET 요청의 경우 params 속성을 사용하여 파라미터를 전달합니다.\r\n    if (method.toLowerCase() === 'get') {\r\n        config.params = data;\r\n        data = null;\r\n    }\r\n\r\n    // 요청 메서드에 따라 적절한 Axios 메서드를 호출합니다.\r\n    switch (method.toLowerCase()) {\r\n        case 'get':\r\n            return axiosInstance.get(url, config);\r\n        case 'post':\r\n            return axiosInstance.post(url, data, config);\r\n        case 'put':\r\n            return axiosInstance.put(url, data, config);\r\n        case 'delete':\r\n            return axiosInstance.delete(url, config);\r\n        default:\r\n            throw new Error(`Unsupported HTTP method: ${method}`);\r\n    }\r\n}\r\n\r\nexport default AxiosCustom;","import AxiosCustom from \"../../../utils/AxiosCustom\";\r\n\r\nconst NewsAPI = async ({ country, category, sources, q, pageSize, page }) => {\r\n    try {\r\n        const apiKey = '5c30efa1dd134641baf0b37092e35245';\r\n        const apiUrl = 'https://newsapi.org/v2/top-headlines';\r\n        const params = {\r\n            apiKey: apiKey,\r\n            country: country,\r\n            category: category,\r\n            sources: sources,\r\n            q: q,\r\n            pageSize: pageSize ? pageSize : 'null',\r\n            page: page ? page : 'null'\r\n        };\r\n        const response = await AxiosCustom(apiUrl, 'get', params);\r\n        console.log('Data:', response.data);\r\n        return response.data.articles;\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default NewsAPI;","import {\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardSubtitle,\r\n    CardText,\r\n    CardTitle,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Blog = (props) => {\r\n    return (\r\n        <Card>\r\n            <CardImg alt=\"Card image cap\" src={props.image} />\r\n            <CardBody className=\"p-4\">\r\n                <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n                <CardSubtitle>{props.subtitle}</CardSubtitle>\r\n                <CardText className=\"mt-3\">{props.text}</CardText>\r\n                <Link to={props.link}><Button color={props.color}>Read More</Button></Link>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Blog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport NewsAPI from \"./NewsAPI\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Blog from \"./Blog\";\r\n\r\nconst News = () => {\r\n    const [country, setCountry] = useState('kr');\r\n    const [category, setCategory] = useState(null);\r\n    const [sources, setSources] = useState(null);\r\n    const [q, setQ] = useState('');\r\n    const [pageSize, setPageSize] = useState(null);\r\n    const [page, setPage] = useState(null);\r\n    const [newsList, setNewsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await NewsAPI({ country, category, sources, q, pageSize, page });\r\n            setNewsList(data);\r\n        };\r\n        fetchData();\r\n    }, [country, category, sources, pageSize, page]);\r\n\r\n    const keyDownHandler = (event) => {\r\n        if (event.key === 'Enter') {\r\n            const fetchData = async () => {\r\n                const data = await NewsAPI({ country, category, sources, q, pageSize, page });\r\n                setNewsList(data);\r\n            };\r\n            fetchData();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>OPEN API 뉴스</h1>\r\n            <Row>\r\n                <h5 className=\"mb-3 mt-3\">OPEN API 뉴스</h5>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"검색어 입력\"\r\n                    value={q}\r\n                    onChange={(e) => setQ(e.target.value)}\r\n                    onKeyDown={keyDownHandler}\r\n                />\r\n                {newsList && newsList.map((item, idx) => (\r\n                    <Col sm=\"6\" lg=\"6\" xl=\"3\" key={idx}>\r\n                        <Blog\r\n                            image={item.urlToImage}\r\n                            title={item.author ? item.author : item.source.name}\r\n                            subtitle={item.title}\r\n                            //text={item.description}\r\n                            color='primary'\r\n                            link={item.url}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React, {useEffect, useState} from 'react';\r\nimport NaverNews from \"./component/NaverNews\";\r\nimport NewsAPI from \"./component/News\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <NewsAPI />\r\n            <NaverNews />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;\r\n"],"names":["async","query","sort","display","url","concat","header","axios","get","headers","data","items","error","console","NaverNews","itemsPerPage","setItemsPerPage","useState","currentPage","setCurrentPage","keyword","setKeyword","setSort","newsList","setNewsList","setDisplay","searchHandle","getNewsList","NaverNewsAPI","useEffect","log","slicedNewsList","slice","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","onKeyDown","event","key","onClick","Row","className","map","item","idx","Col","md","lg","Card","body","CardTitle","tag","dangerouslySetInnerHTML","__html","DOMPurify","title","CardText","description","Link","to","link","Button","color","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","Math","ceil","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","axiosInstance","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","response","method","arguments","undefined","toLowerCase","params","post","put","delete","Error","country","category","sources","q","pageSize","page","_ref","apiUrl","apiKey","AxiosCustom","articles","props","CardImg","alt","src","image","CardBody","CardSubtitle","subtitle","text","News","setCountry","setCategory","setSources","setQ","setPageSize","setPage","NewsAPI","fetchData","sm","xl","Blog","urlToImage","author","source","name"],"sourceRoot":""}